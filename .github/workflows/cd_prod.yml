name: CD (production)

on:
  push:
    tags: v[0-9]+.[0-9]+.[0-9]+
  workflow_dispatch:
    inputs:
      version:
        description: Version to deploy
        default: AUTO

env:
  TARGET_NAME: textnow-bot
  TARGET_STAGE: prod
  TARGET_VERSION: ${{ github.event.inputs.version || github.ref }}

jobs:
  publish:
    name: Publish package
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install semantic-version setuptools wheel twine
    - name: Resolve target version
      run: |
        TARGET_VERSION=${TARGET_VERSION#refs/*/v}
        echo TARGET_VERSION=$(python scripts/resolve_target_version.py) >> $GITHUB_ENV
    - name: Build package
      run: python setup.py bdist_wheel
    - name: Check package long description
      run: twine check dist/*
    - name: Publish package to TestPyPI
      env:
        TWINE_USERNAME: ${{ secrets.TESTPYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
      run: twine upload -r testpypi dist/*
    - name: Publish package to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.TARGET_VERSION }}
        release_name: Release v${{ env.TARGET_VERSION }}
        body: |
          PyPI: https://pypi.org/project/${{ env.TARGET_NAME }}/${{ env.TARGET_VERSION }}
          TestPyPI: https://test.pypi.org/project/${{ env.TARGET_NAME }}/${{ env.TARGET_VERSION }}
